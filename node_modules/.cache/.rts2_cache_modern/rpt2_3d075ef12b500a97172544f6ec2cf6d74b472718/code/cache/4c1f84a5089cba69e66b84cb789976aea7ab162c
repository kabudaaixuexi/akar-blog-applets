{"code":"import { watch, readonly, reactive } from \"vue\";\r\nconst createStore = (app, stores) => {\r\n    if (!stores?.length) {\r\n        return;\r\n    }\r\n    let AllStore = [];\r\n    stores.map(ele => {\r\n        // 包装成响应式 \r\n        ele.state = reactive(ele.state);\r\n        // 注入\r\n        app.provide(ele.storeName, readonly(ele.state)); // 这里标记，后面可以优化\r\n        // 持久化处理\r\n        if (ele.persistedState) {\r\n            // 读取sessionStorage的值\r\n            const storageState = JSON.parse(sessionStorage.getItem(ele.storeName) || \"{}\");\r\n            for (const key in storageState) {\r\n                ele.state[key] = storageState[key];\r\n            }\r\n            // 监听值变化，保存到sessionStorage\r\n            watch(() => ele.state, () => {\r\n                sessionStorage.setItem(ele.storeName, JSON.stringify(ele.state));\r\n            }, { deep: true });\r\n        }\r\n        // 扁平化setter\r\n        AllStore[ele.storeName] = {};\r\n        ele.setter && ele.setter.map(setterItem => {\r\n            for (var fnName in setterItem) {\r\n                AllStore[ele.storeName][fnName] = setterItem[fnName].bind(ele.state);\r\n            }\r\n        });\r\n        // 不需要暴露state可以更好的控制单向流\r\n        // AllStore[ele.storeName]['state'] = ele.state\r\n        // 不处理state数据类型，需要你自己去写范型哦\r\n    });\r\n    // 注册全局对象，需要在模块文件写下面代码最好在入口文件里面写，ts的编译问题\r\n    /**\r\n     *  declare module '@vue/runtime-core' {\r\n     *      interface ComponentCustomProperties {\r\n     *          $Store: any\r\n     *      }\r\n     *  }\r\n     */\r\n    app.config.globalProperties.$Store = AllStore;\r\n    return AllStore;\r\n};\r\nexport default createStore;\r\n//# sourceMappingURL=index.js.map","references":["/Users/zzh/Desktop/npm-provide/node_modules/vue/dist/vue.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AA2BhD,MAAM,WAAW,GAAG,CAAC,GAAO,EAAE,MAAuB,EAAE,EAAE;IACrD,IAAG,CAAC,MAAM,EAAE,MAAM,EAAE;QAAC,OAAM;KAAC;IAC5B,IAAI,QAAQ,GAAO,EAAE,CAAA;IACrB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACb,UAAU;QACV,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAC/B,KAAK;QACL,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA,CAAC,cAAc;QAC9D,QAAQ;QACR,IAAI,GAAG,CAAC,cAAc,EAAE;YACpB,qBAAqB;YACrB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC;YAC/E,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;aACtC;YACD,0BAA0B;YAC1B,KAAK,CACD,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EACf,GAAG,EAAE;gBACD,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACrE,CAAC,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACjB,CAAC;SACL;QACD,YAAY;QACZ,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAA;QAC5B,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACtC,KAAI,IAAI,MAAM,IAAI,UAAU,EAAE;gBAC1B,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;aACvE;QACL,CAAC,CAAC,CAAC;QACH,uBAAuB;QACvB,+CAA+C;QAC/C,0BAA0B;IAC9B,CAAC,CAAC,CAAA;IACF,wCAAwC;IACxC;;;;;;OAMG;IACH,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9C,OAAO,QAAQ,CAAA;AACnB,CAAC,CAAA;AAED,eAAe,WAAW,CAAC\"}","dts":{"name":"/Users/zzh/Desktop/npm-provide/dist/index.d.ts","writeByteOrderMark":false,"text":"/**\r\n * 此脚本暴露三个方法\r\n * ***************\r\n * @createStore //// 用于创建仓库列表\r\n * @params //// 每个仓库包含自己的 state(reactive) setter 方法，获取state使用inject('仓库名称')\r\n * [\r\n *  {\r\n *      storeName:string  // 仓库名称\r\n *      persistedState: boolean // 是否开启持久化储存，依赖于sessionStorage\r\n *      state: {\r\n *      }\r\n *      setter: [\r\n *          {\r\n *              'setter-item-name': fn // fn不能使用箭头函数的形式\r\n *          }\r\n *      ]\r\n *  }\r\n * ]\r\n * setter中的fn接收传递过来的数据，可以通过this.***得到当前仓库的state内的数据进行修改\r\n *  */\r\ninterface _StoreCollect {\r\n    storeName: string;\r\n    persistedState: boolean;\r\n    state: any;\r\n    setter?: any[];\r\n}\r\ndeclare const createStore: (app: any, stores: _StoreCollect[]) => any;\r\nexport default createStore;\r\n"}}
